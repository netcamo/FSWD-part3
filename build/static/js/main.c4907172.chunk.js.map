{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/persons.js","components/Person.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","persons","filterName","handleFilterNameChange","console","log","shownPersons","filter","element","name","toLowerCase","includes","value","onChange","map","person","number","Persons","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","newObject","post","id","put","delete","Person","deletePerson","onClick","Notification","message","className","App","useEffect","personService","then","response","setPersons","data","useState","setNewName","setFilterName","setNewNumber","errorMessage","setErrorMessage","successMessage","setSuccessMessage","window","confirm","persons_altered","event","target","preventDefault","undefined","find","personObject","newList","concat","setTimeout","catch","error","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4907172.chunk.js","sourcesContent":["import React  from 'react'\r\n\r\n\r\nconst Filter  = ( {persons, filterName,handleFilterNameChange} ) => {\r\n    console.log(filterName)\r\n    const shownPersons = filterName === ''  ?  [] : persons.filter(element => element.name.toLowerCase().includes(filterName.toLowerCase()))\r\n\r\n    return ( <div>\r\n        Filter shown with <input value={filterName} onChange={handleFilterNameChange} />\r\n        {shownPersons.map(person => <p key={person.name}>{person.name} {person.number}</p>)}\r\n\r\n    </div>)\r\n\r\n\r\n}\r\nexport default Filter\r\n","import React from \"react\";\r\n\r\n\r\nconst Persons = ({persons}) => {\r\n\r\n\r\n    return (<div></div>)\r\n\r\n}\r\nexport default Persons\r\n","import React from \"react\";\r\n\r\n\r\nconst PersonForm = ({addPerson , newName, handleNameChange , newNumber , handleNumberChange }) => {\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit = {addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange = {handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange = {handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default PersonForm\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deletePerson= (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default {\r\n     getAll,\r\n     create,\r\n     update,\r\n    deletePerson\r\n}\r\n","import React from \"react\";\r\n\r\nconst Person = ({person ,deletePerson }) =>{\r\n\r\n\r\n\r\n    return (<div>\r\n      {person.name}  {person.number}\r\n         <button  onClick={() => deletePerson(person.id)}>Delete {person.id} </button>\r\n\r\n    </div>)\r\n\r\n\r\n}\r\n\r\nexport default Person\r\n","import React from \"react\";\r\n\r\nconst Notification = ({message,type}) => {\r\n    if(message===null) {\r\n        return null\r\n    }\r\n\r\n    return (<div className={type}>\r\n        {message}\r\n    </div>)\r\n\r\n\r\n}\r\n\r\n\r\nexport default  Notification\r\n","import React, { useState , useEffect} from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from \"./components/PersonForm\";\nimport personService from './services/persons'\nimport Person from \"./components/Person\";\nimport './index.css'\nimport Notification from \"./components/Notification\";\nconst App = () => {\n\n\n\n    useEffect(()=>{\n        console.log ('effect')\n       const eventHandler= response =>{\n           console.log('promise fulfilled')\n           setPersons(response.data)\n       }\n        const promise= personService.getAll()\n       promise.then(eventHandler)\n    },[])\n\n\n    const [persons, setPersons] = useState([])\n   const [ newName, setNewName ] = useState('')\n    const [ filterName, setFilterName ] = useState('')\n    const [newNumber , setNewNumber]= useState('')\n    const [errorMessage, setErrorMessage] = useState(null)\n    const [successMessage,setSuccessMessage] = useState(null)\n\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        console.log(newName, newNumber,(newNumber===''))\n        if  (persons.find(person => person.name === newName) !== undefined)\n        {     if(newNumber !== \"\") {\n                    if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one ?`)){\n                        console.log(\"Trying to change \" + newNumber)\n                        const id=persons.find(person=>person.name===newName).id\n                        const personObject = {\n                            name: newName,\n                            number: newNumber,\n                        }\n\n                        personService.update(id,personObject).then(response =>{\n\n                            const newList=persons.filter(person => person.id!== id)\n\n                            setPersons(newList.concat(response.data))\n                            setSuccessMessage(\n                                `Updated ${personObject.name}'s number to ${personObject.number} `\n                            )\n                            setTimeout(() => {\n                                setSuccessMessage(null)\n                            }, 2000)\n                        } ).catch( error => {\n\n                            setErrorMessage(\n                                ` ${personObject.name}'s is Deleted `\n                            )\n                            setTimeout(() => {\n                                setErrorMessage(null)\n                            }, 2000)\n                            personService.getAll().then(response=> {\n                                setPersons(response.data)\n                            })\n                        })\n\n\n\n                    }\n                        }\n               else {\n                   window.alert(`${newName} is already in phonebook`)\n        }\n        }\n\n        else {\n            if(newNumber ==='')\n            {window.alert(`Number is mandatory`) }\n            else {\n                const personObject = {\n                    name: newName,\n                    number: newNumber,\n                }\n                personService.create(personObject).then(response => {\n                    setPersons(persons.concat(response.data))\n                })\n                setSuccessMessage(\n                    `Added ${personObject.name}`\n                )\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 2000)\n            }\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n    const deletePerson= (id) => {\n        console.log(\"Trying to delete\"+ id)\n        if(window.confirm (\"Would you like to delete \" +\n            persons.filter(person => person.id=== id )[0].name +\n            \"?\")) {\n            personService.deletePerson(id).then(() => {\n                const persons_altered=persons.filter(person => person.id !==id)\n                setPersons(persons_altered)\n\n            })\n        }\n\n\n    }\n\n     const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n    const handleFilterNameChange = (event) => {\n        setFilterName(event.target.value)\n    }\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n\n    return (\n      <div>\n\n          <h2>Phonebook</h2>\n          <Notification message={errorMessage} type=\"error\"/>\n\n          <Notification message={successMessage} type=\"success\"/>\n          <Filter persons={persons} filterName={filterName}  handleFilterNameChange={handleFilterNameChange} />\n\n          <h3>Add a new</h3>\n    <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange}  newNumber={ newNumber} handleNumberChange={handleNumberChange}/>\n\n          <h3>Numbers</h3>\n          {persons.map(person => <Person key={person.id} person={person} deletePerson={deletePerson}  />)}\n         <Persons persons={persons}/>\n      </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}